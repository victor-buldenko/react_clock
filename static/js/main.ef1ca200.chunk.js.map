{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerIdEverySec","this","setState","window","setInterval","console","info","toUTCString","slice","prevProps","props","name","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,gBAAkB,EALpB,uDAOE,WAA2B,IAAD,OACxBC,KAAKC,SAAS,CAAEJ,MAAO,IAAIC,OAE3BE,KAAKD,gBAAkBG,OAAOC,aAAY,WACxC,EAAKF,SAAS,CAAEJ,MAAO,IAAIC,OAC3BM,QAAQC,MAAK,IAAIP,MAAOQ,cAAcC,OAAO,IAAK,MACjD,OAbP,gCAgBE,SAAmBC,GACbR,KAAKS,MAAMC,OAASF,EAAUE,MAChCN,QAAQO,MAAR,eAAsBX,KAAKS,MAAMC,KAAjC,mBAAgDF,EAAUE,SAlBhE,kCAsBE,WACER,OAAOU,cAAcZ,KAAKD,mBAvB9B,oBA0BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCb,KAAKS,MAAMC,OAE3C,YAED,sBAAMG,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,YAlCtD,GAA2BO,IAAMC,WCPjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAGX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAK1B,SAAS,CAAEoB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKxB,SAAS,CAAEoB,UAAU,OAG5BrB,KAAKuB,QAAUrB,OAAOC,aAAY,WAChC,EAAKF,SAAS,CAAEqB,UAAWN,QAC1B,QArBP,oBAwBE,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,6CACCb,KAAKJ,MAAMyB,UAAY,cAAC,EAAD,CAAOX,KAAMV,KAAKJ,MAAM0B,mBA5BxD,GAAyBR,IAAMC,WCP/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.ef1ca200.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  today: null | Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerIdEverySec = 0;\n\n  componentDidMount(): void {\n    this.setState({ today: new Date() });\n\n    this.timerIdEverySec = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (this.props.name !== prevProps.name) {\n      console.debug(`now: ${this.props.name}, prev: ${prevProps.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerIdEverySec);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{this.props.name}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}